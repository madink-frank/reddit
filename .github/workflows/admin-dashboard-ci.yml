name: Admin Dashboard - CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'admin-dashboard/**'
      - '.github/workflows/admin-dashboard-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'admin-dashboard/**'
      - '.github/workflows/admin-dashboard-ci.yml'

env:
  NODE_VERSION: "18"
  WORKING_DIRECTORY: "./admin-dashboard"

defaults:
  run:
    working-directory: ${{ env.WORKING_DIRECTORY }}

jobs:
  lint-and-format:
    runs-on: ubuntu-latest
    name: Lint and Format Check
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: ${{ env.WORKING_DIRECTORY }}/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      
    - name: Type check
      run: npm run type-check
      
    - name: Lint check
      run: npm run lint
      
    - name: Format check
      run: npm run format:check

  test:
    runs-on: ubuntu-latest
    name: Run Tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: ${{ env.WORKING_DIRECTORY }}/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run unit tests
      run: npm run test:run
      
    - name: Run unit tests with coverage
      run: npm run test:coverage
      
    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        file: ${{ env.WORKING_DIRECTORY }}/coverage/lcov.info
        flags: admin-dashboard
        name: admin-dashboard-coverage
        fail_ci_if_error: false

  accessibility-test:
    runs-on: ubuntu-latest
    name: Accessibility Tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: ${{ env.WORKING_DIRECTORY }}/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run accessibility tests
      run: npm run test:a11y

  e2e-test:
    runs-on: ubuntu-latest
    name: End-to-End Tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: ${{ env.WORKING_DIRECTORY }}/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
      
    - name: Build application
      run: npm run build:dev
      env:
        VITE_API_BASE_URL: http://localhost:8000/api/v1
        VITE_WS_URL: ws://localhost:8000/ws
        VITE_REDDIT_CLIENT_ID: test_client_id
        VITE_REDDIT_REDIRECT_URI: http://localhost:5173/auth/callback
        VITE_ADMIN_USERNAMES: test_admin
        
    - name: Start preview server
      run: |
        npm run preview &
        sleep 5
        
    - name: Run E2E tests
      run: npm run test:e2e
      
    - name: Run E2E accessibility tests
      run: npm run test:a11y:e2e
      
    - name: Upload E2E test results
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-report
        path: ${{ env.WORKING_DIRECTORY }}/playwright-report/
        retention-days: 30

  build-test:
    runs-on: ubuntu-latest
    name: Build Test
    strategy:
      matrix:
        environment: [development, staging, production]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: ${{ env.WORKING_DIRECTORY }}/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build for ${{ matrix.environment }}
      run: |
        if [ "${{ matrix.environment }}" = "development" ]; then
          npm run build:dev
        elif [ "${{ matrix.environment }}" = "staging" ]; then
          npm run build:staging
        else
          npm run build:prod
        fi
      env:
        VITE_API_BASE_URL: https://api.example.com/api/v1
        VITE_WS_URL: wss://api.example.com/ws
        VITE_REDDIT_CLIENT_ID: test_client_id
        VITE_REDDIT_REDIRECT_URI: https://admin.example.com/auth/callback
        VITE_ADMIN_USERNAMES: test_admin
        VITE_ENABLE_ANALYTICS: true
        VITE_ENABLE_NOTIFICATIONS: true
        VITE_ENABLE_DEV_TOOLS: ${{ matrix.environment != 'production' }}
        VITE_KEEP_CONSOLE: ${{ matrix.environment != 'production' }}
        VITE_ENABLE_PERFORMANCE_MONITORING: true
        
    - name: Run bundle size check
      run: npm run size-check
      continue-on-error: ${{ matrix.environment != 'production' }}
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-${{ matrix.environment }}
        path: ${{ env.WORKING_DIRECTORY }}/dist/
        retention-days: 7

  bundle-analysis:
    runs-on: ubuntu-latest
    name: Bundle Analysis
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: ${{ env.WORKING_DIRECTORY }}/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build with analysis
      run: npm run build:analyze
      env:
        VITE_API_BASE_URL: https://api.example.com/api/v1
        VITE_WS_URL: wss://api.example.com/ws
        VITE_REDDIT_CLIENT_ID: test_client_id
        VITE_REDDIT_REDIRECT_URI: https://admin.example.com/auth/callback
        VITE_ADMIN_USERNAMES: test_admin
        
    - name: Upload bundle analysis
      uses: actions/upload-artifact@v4
      with:
        name: bundle-analysis
        path: ${{ env.WORKING_DIRECTORY }}/dist/stats.html
        retention-days: 30

  security-scan:
    runs-on: ubuntu-latest
    name: Security Scan
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: ${{ env.WORKING_DIRECTORY }}/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run npm audit
      run: npm audit --audit-level=moderate
      continue-on-error: true
      
    - name: Run security scan with Snyk
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high
        command: test
      continue-on-error: true

  performance-test:
    runs-on: ubuntu-latest
    name: Performance Test
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: ${{ env.WORKING_DIRECTORY }}/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build:prod
      env:
        VITE_API_BASE_URL: https://api.example.com/api/v1
        VITE_WS_URL: wss://api.example.com/ws
        VITE_REDDIT_CLIENT_ID: test_client_id
        VITE_REDDIT_REDIRECT_URI: https://admin.example.com/auth/callback
        VITE_ADMIN_USERNAMES: test_admin
        
    - name: Start preview server
      run: |
        npm run preview &
        sleep 5
        
    - name: Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v10
      with:
        configPath: ${{ env.WORKING_DIRECTORY }}/lighthouse.config.js
        uploadArtifacts: true
        temporaryPublicStorage: true