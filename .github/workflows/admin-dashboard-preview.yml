name: Admin Dashboard - Preview Deploy

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'admin-dashboard/**'
      - '.github/workflows/admin-dashboard-preview.yml'

env:
  NODE_VERSION: "18"
  WORKING_DIRECTORY: "./admin-dashboard"

defaults:
  run:
    working-directory: ${{ env.WORKING_DIRECTORY }}

jobs:
  preview-deploy:
    runs-on: ubuntu-latest
    name: Deploy Preview
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: ${{ env.WORKING_DIRECTORY }}/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm run test:run
      
    - name: Build application
      run: npm run build:dev
      env:
        VITE_NODE_ENV: preview
        VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL_STAGING || 'https://api-staging.example.com/api/v1' }}
        VITE_WS_URL: ${{ secrets.VITE_WS_URL_STAGING || 'wss://api-staging.example.com/ws' }}
        VITE_REDDIT_CLIENT_ID: ${{ secrets.VITE_REDDIT_CLIENT_ID_STAGING }}
        VITE_REDDIT_REDIRECT_URI: https://deploy-preview-${{ github.event.number }}--your-app.netlify.app/auth/callback
        VITE_ADMIN_USERNAMES: ${{ secrets.VITE_ADMIN_USERNAMES_STAGING || 'test_admin' }}
        VITE_ENABLE_ANALYTICS: false
        VITE_ENABLE_NOTIFICATIONS: true
        VITE_ENABLE_DEV_TOOLS: true
        VITE_KEEP_CONSOLE: true
        VITE_ENABLE_PERFORMANCE_MONITORING: false
        
    - name: Deploy to Netlify (Preview)
      uses: nwtgck/actions-netlify@v3.0
      with:
        publish-dir: ${{ env.WORKING_DIRECTORY }}/dist
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Preview deploy for PR #${{ github.event.number }}"
        alias: deploy-preview-${{ github.event.number }}
        enable-pull-request-comment: true
        enable-commit-comment: false
        overwrites-pull-request-comment: true
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      id: netlify-deploy
      
    - name: Run E2E tests on preview
      run: npm run test:e2e
      env:
        PLAYWRIGHT_BASE_URL: ${{ steps.netlify-deploy.outputs.deploy-url }}
      continue-on-error: true
      
    - name: Run Lighthouse on preview
      uses: treosh/lighthouse-ci-action@v10
      with:
        urls: ${{ steps.netlify-deploy.outputs.deploy-url }}
        configPath: ${{ env.WORKING_DIRECTORY }}/lighthouse.config.js
        uploadArtifacts: true
        temporaryPublicStorage: true
      continue-on-error: true
      
    - name: Comment PR with preview info
      uses: actions/github-script@v7
      with:
        script: |
          const deployUrl = '${{ steps.netlify-deploy.outputs.deploy-url }}';
          const prNumber = context.issue.number;
          
          const comment = `## üöÄ Preview Deployment
          
          Your changes have been deployed to a preview environment:
          
          **üîó Preview URL:** ${deployUrl}
          
          ### üìã Deployment Details
          - **Environment:** Preview
          - **Commit:** \`${{ github.sha }}\`
          - **Branch:** \`${{ github.head_ref }}\`
          
          ### ‚úÖ Checks
          - Build: ‚úÖ Successful
          - Tests: ${{ job.status == 'success' && '‚úÖ Passed' || '‚ùå Failed' }}
          - E2E Tests: Running...
          - Lighthouse: Running...
          
          ---
          *This preview will be automatically updated when you push new commits to this PR.*`;
          
          github.rest.issues.createComment({
            issue_number: prNumber,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  visual-regression:
    runs-on: ubuntu-latest
    name: Visual Regression Tests
    needs: preview-deploy
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: ${{ env.WORKING_DIRECTORY }}/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
      
    - name: Run visual regression tests
      run: |
        # Add visual regression test command here
        echo "Visual regression tests would run here"
        # npx playwright test --config=playwright-visual.config.ts
      continue-on-error: true